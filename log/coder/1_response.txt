// start bump variables function
void Solver::bump_var(int var, double coeff) {
    // Apply decay to variable activity scores
    activity[var] *= 0.9; // Decay logic to gradually reduce inactivity score

    // Increase the activity score based on the provided coefficient
    activity[var] += var_inc * coeff;

    // Prevent float overflow by normalizing activity scores
    if (activity[var] > 1e100) {
        for (int i = 1; i <= vars; i++) activity[i] *= 1e-100;
        var_inc *= 1e-100;
    }

    // Update the heap if the variable is still in it
    if (vsids.inHeap(var)) vsids.update(var); // update heap
}
// end bump variables function